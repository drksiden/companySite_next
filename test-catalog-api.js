// –¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ API –∫–∞—Ç–∞–ª–æ–≥–∞
// –ó–∞–ø—É—Å–∫: node test-catalog-api.js

const baseUrl = 'http://localhost:3000';

async function testCatalogAPI() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API –∫–∞—Ç–∞–ª–æ–≥–∞...\n');

  try {
    // –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤
    console.log('üìã –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤');
    const response = await fetch(`${baseUrl}/api/catalog/products?limit=3`);

    if (!response.ok) {
      throw new Error(`HTTP error! status: ${response.status}`);
    }

    const data = await response.json();

    if (data.success) {
      console.log('‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç');
      console.log(`üìä –ù–∞–π–¥–µ–Ω–æ –ø—Ä–æ–¥—É–∫—Ç–æ–≤: ${data.data.products.length}`);

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç
      if (data.data.products.length > 0) {
        const product = data.data.products[0];
        console.log('\nüîç –ê–Ω–∞–ª–∏–∑ –ø–µ—Ä–≤–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞:');
        console.log(`‚îú‚îÄ ID: ${product.id}`);
        console.log(`‚îú‚îÄ –ù–∞–∑–≤–∞–Ω–∏–µ: ${product.name}`);
        console.log(`‚îú‚îÄ Slug: ${product.slug}`);
        console.log(`‚îú‚îÄ Thumbnail: ${product.thumbnail || '–ù–ï–¢'}`);
        console.log(`‚îú‚îÄ Images: ${product.images ? product.images.length : 0} —à—Ç.`);
        console.log(`‚îú‚îÄ Track inventory: ${product.track_inventory}`);
        console.log(`‚îú‚îÄ Inventory quantity: ${product.inventory_quantity}`);
        console.log(`‚îú‚îÄ Base price: ${product.base_price || '–ù–ï–¢'}`);
        console.log(`‚îú‚îÄ Sale price: ${product.sale_price || '–ù–ï–¢'}`);
        console.log(`‚îú‚îÄ Final price: ${product.final_price || '–ù–ï–¢'}`);
        console.log(`‚îú‚îÄ Is on sale: ${product.is_on_sale}`);
        console.log(`‚îú‚îÄ Discount %: ${product.discount_percentage || 0}%`);
        console.log(`‚îú‚îÄ Brand: ${product.brand_name || '–ù–ï–¢'}`);
        console.log(`‚îî‚îÄ Category: ${product.category_name || '–ù–ï–¢'}`);

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏–∫—É –Ω–∞–ª–∏—á–∏—è
        const isInStock = product.track_inventory
          ? (product.inventory_quantity || 0) > 0
          : true;
        console.log(`\nüì¶ –°—Ç–∞—Ç—É—Å –Ω–∞–ª–∏—á–∏—è: ${isInStock ? '‚úÖ –í –Ω–∞–ª–∏—á–∏–∏' : '‚ùå –ù–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏'}`);

        if (product.track_inventory) {
          console.log(`   ‚îî‚îÄ –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è –ø–æ —Å–∫–ª–∞–¥—É: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ ${product.inventory_quantity}`);
        } else {
          console.log(`   ‚îî‚îÄ –ù–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è –ø–æ —Å–∫–ª–∞–¥—É: –≤—Å–µ–≥–¥–∞ –≤ –Ω–∞–ª–∏—á–∏–∏`);
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        console.log('\nüñºÔ∏è –ê–Ω–∞–ª–∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:');
        if (product.thumbnail) {
          console.log(`‚îú‚îÄ Thumbnail URL: ${product.thumbnail}`);
          console.log(`‚îú‚îÄ –í–∞–ª–∏–¥–Ω–æ—Å—Ç—å URL: ${isValidUrl(product.thumbnail) ? '‚úÖ' : '‚ùå'}`);
        } else {
          console.log('‚îú‚îÄ ‚ùå Thumbnail –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç');
        }

        if (product.images && product.images.length > 0) {
          console.log(`‚îú‚îÄ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: ${product.images.length} —à—Ç.`);
          product.images.forEach((img, index) => {
            console.log(`‚îÇ  ‚îú‚îÄ [${index + 1}] ${img}`);
            console.log(`‚îÇ  ‚îî‚îÄ –í–∞–ª–∏–¥–Ω–æ—Å—Ç—å: ${isValidUrl(img) ? '‚úÖ' : '‚ùå'}`);
          });
        } else {
          console.log('‚îî‚îÄ ‚ùå –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç');
        }
      }

      // –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ –Ω–∞–ª–∏—á–∏—é
      console.log('\nüìã –¢–µ—Å—Ç 2: –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Ç–æ–ª—å–∫–æ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –Ω–∞–ª–∏—á–∏–∏');
      const inStockResponse = await fetch(`${baseUrl}/api/catalog/products?inStockOnly=true&limit=5`);

      if (inStockResponse.ok) {
        const inStockData = await inStockResponse.json();
        console.log(`‚úÖ –¢–æ–≤–∞—Ä–æ–≤ –≤ –Ω–∞–ª–∏—á–∏–∏: ${inStockData.data.products.length}`);

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–π —Ç–æ–≤–∞—Ä
        inStockData.data.products.forEach((product, index) => {
          const isInStock = product.track_inventory
            ? (product.inventory_quantity || 0) > 0
            : true;
          console.log(`‚îú‚îÄ [${index + 1}] ${product.name}: ${isInStock ? '‚úÖ' : '‚ùå'} (track: ${product.track_inventory}, qty: ${product.inventory_quantity})`);
        });
      }

      // –¢–µ—Å—Ç 3: –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤
      console.log('\nüìã –¢–µ—Å—Ç 3: –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤');
      const searchResponse = await fetch(`${baseUrl}/api/catalog/products?search=–∞&limit=3`);

      if (searchResponse.ok) {
        const searchData = await searchResponse.json();
        console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –ø–æ –ø–æ–∏—Å–∫—É "–∞": ${searchData.data.products.length} —Ç–æ–≤–∞—Ä–æ–≤`);
        searchData.data.products.forEach((product, index) => {
          console.log(`‚îú‚îÄ [${index + 1}] ${product.name}`);
        });
      }

    } else {
      console.log('‚ùå API –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É:', data.error);
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message);
    console.log('\nüí° –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ:');
    console.log('‚îú‚îÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 3000');
    console.log('‚îú‚îÄ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–æ—Å—Ç—É–ø–Ω–∞');
    console.log('‚îî‚îÄ –í —Ç–∞–±–ª–∏—Ü–µ products –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ');
  }
}

// –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ URL
function isValidUrl(url) {
  if (!url || typeof url !== 'string' || url.trim() === '') return false;

  try {
    new URL(url);
    return true;
  } catch {
    return url.startsWith('/') || url.startsWith('./') || url.startsWith('../');
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
testCatalogAPI();
